package com.techlabs.action;

import javax.crypto.SecretKey;
import javax.servlet.http.HttpSession;

import org.apache.struts2.ServletActionContext;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;

import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.ModelDriven;
import com.techlabs.entity.User;
import com.techlabs.service.UserService;
import com.techlabs.viewmodel.LoginVM;

public class LoginAction extends ActionSupport implements ModelDriven<LoginVM> {
	private LoginVM userbean = new LoginVM();

	WebApplicationContext context = WebApplicationContextUtils
			.getRequiredWebApplicationContext(ServletActionContext
					.getServletContext());

	private UserService userservice = (UserService) context
			.getBean("userservice");

	private HttpSession session;

	@Override
	public String execute() {
		return "login";
	}

	public String authenticateUser() throws Exception {
		// SecretKey secKey = userservice.getSecretEncryptionKey();
		// String username = userservice.bytesToHex(userservice.encryptText(
		// userbean.getUsername(), secKey));
		// String password = userservice.bytesToHex(userservice.encryptText(
		// userbean.getPassword(), secKey));
		//
		// User isauthenticated = userservice.authenticateUser(username,
		// password);
		// System.out.println("logged in User is" + isauthenticated);
		//
		// if (isauthenticated != null) {
		// if (isauthenticated.getState().equalsIgnoreCase("activate")) {
		// session = ServletActionContext.getRequest().getSession();
		// System.out.println("session is initailized");
		// session.setAttribute("username", userbean.getUsername());
		// System.out.println(isauthenticated.getUser_id());
		// session.setAttribute("acc_no", isauthenticated.getUser_id());
		// return "success";
		// } else {
		// addActionError("Please activate your account by clicking on link sent to registered Email-ID");
		// return "input";
		// }
		// } else {
		// addActionError("Please enter valid credentials");
		// return "input";
		// }
		SecretKey secKey = userservice.getSecretEncryptionKey();
		byte[] cipherText1 = userservice.encryptText(userbean.getUsername(),
				secKey);
		byte[] cipherText2 = userservice.encryptText(userbean.getUsername(),
				secKey);

		String decryptedText = userservice.decryptText(cipherText, secKey);

		System.out.println("AES Key (Hex Form):");
//		String str = UserService.bytesToHex(secKey.getEncoded());
//		System.out.println(str);
		System.out.println("Encrypted Text (Hex Form):"
				+ userservice.bytesToHex(cipherText));
		System.out.println("Descrypted Text:" + decryptedText);
		return "input";
	}

	@Override
	public LoginVM getModel() {

		return userbean;
	}

	public LoginVM getUserbean() {
		return userbean;
	}

	public void setUserbean(LoginVM userbean) {
		this.userbean = userbean;
	}

}
