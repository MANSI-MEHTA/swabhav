package com.techlabs.action;

import javax.servlet.http.HttpSession;

import org.apache.struts2.ServletActionContext;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;

import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.ModelDriven;
import javax.crypto.SecretKey;
import com.techlabs.service.UserService;
import com.techlabs.viewmodel.LoginVM;

public class LoginAction extends ActionSupport implements ModelDriven<LoginVM> {
	private LoginVM userbean = new LoginVM();

	WebApplicationContext context = WebApplicationContextUtils
			.getRequiredWebApplicationContext(ServletActionContext
					.getServletContext());

	private UserService userservice = (UserService) context
			.getBean("userservice");

	private HttpSession session;

	@Override
	public String execute() {
		return "login";
	}

	public String authenticateUser() throws Exception {
		SecretKey secKey = userservice.getSecretEncryptionKey();
		String username = userservice.bytesToHex(userservice.encryptText(userbean.getUsername()),
				secKey);
		byte[] password = userservice.encryptText(userbean.getPassword(),
				secKey);

		boolean isauthenticated = userservice.authenticateUser(
				, userbean.getPassword());

		if (isauthenticated) {

			session = ServletActionContext.getRequest().getSession();
			System.out.println("session is initailized");
			session.setAttribute("username", userbean.getUsername());

			return "success";
		} else {
			addActionError("Please enter valid credentials");
			return "input";
		}

		// byte[] cipherText = userservice.encryptText(userbean.getUsername(),
		// secKey);

		// String decryptedText = userservice.decryptText(cipherText, secKey);

		// System.out.println("AES Key (Hex Form):");
		// String str=UserService.bytesToHex(secKey.getEncoded());
		// System.out.println(str);
		// System.out.println("Encrypted Text (Hex Form):"
		// + userservice.bytesToHex(cipherText));
		// System.out.println("Descrypted Text:" + decryptedText);

	}

	@Override
	public LoginVM getModel() {

		return userbean;
	}

	public LoginVM getUserbean() {
		return userbean;
	}

	public void setUserbean(LoginVM userbean) {
		this.userbean = userbean;
	}

}
