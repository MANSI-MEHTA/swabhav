package com.techlabs.action;

import org.apache.struts2.ServletActionContext;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;

import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.ModelDriven;
import com.techlabs.entity.Account;
import com.techlabs.entity.User;
import com.techlabs.service.AccountService;
import com.techlabs.service.UserService;
import com.techlabs.viewmodel.RegistrationVM;

public class RegistrationAction extends ActionSupport implements
		ModelDriven<RegistrationVM> {
	private RegistrationVM userbean = new RegistrationVM();
	WebApplicationContext context = WebApplicationContextUtils
			.getRequiredWebApplicationContext(ServletActionContext
					.getServletContext());

	private UserService userservice = (UserService) context
			.getBean("userservice");

	private AccountService accountservice = (AccountService) context
			.getBean("accountservice");

	@Override
	public String execute() {
		return "input";

	}

	public String registerUser() {

		boolean ispresent = userservice.checkUserExists(userbean.getEmail());
		if (ispresent) {
			addActionError("You are already registered,login instead ");
		
		} else {
			long acc_no = accountservice.generateAccountNumber();
			System.out.println("Account number is"+acc_no);
			Account newaccount = new Account(acc_no, 0);
			System.out.println("new Account is"+newaccount);
			//accountservice.CreateAccount(newaccount);
//			User newuser = new User(userbean.getFname(), userbean.getLname(),
//					userbean.getEmail(), userbean.getContact(),
//					userbean.getDob(), userbean.getAddress(),
//					userbean.getUsername(), userbean.getPassword(),
//					"unactivated", newaccount);
//			userservice.registerUser(newuser);
			
		}
		return "success";
		
	}

	public void validate() {
		if (userbean.getFname() == null) {
			addFieldError("userbean.fname", "firstname is required");

		}
		if (userbean.getLname() == null) {
			addFieldError("userbean.lname", "lastname is required");
		}

		if (userbean.getEmail() == null) {
			addFieldError("userbean.email", "email id is required");
		}
		if (String.valueOf(userbean.getContact()).length() < 9) {
			addFieldError("usernbean.contact", "contact is required");
		}
		if (userbean.getAddress() == null) {
			addFieldError("userbean.address", "Address is required");
		}
		if (userbean.getUsername() == null) {
			addFieldError("userbean.username", "username is required");
		}
		if (userbean.getPassword() == null) {
			addFieldError("userbean.password", "password is required");
		}
		if (userbean.getDob() == null) {
			addFieldError("userbean.date", "Date is required");
		}

	}

	@Override
	public RegistrationVM getModel() {

		return userbean;
	}

	public RegistrationVM getUserbean() {
		return userbean;
	}

	public void setUserbean(RegistrationVM userbean) {
		this.userbean = userbean;
	}

}
